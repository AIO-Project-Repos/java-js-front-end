{"ast":null,"code":"var _jsxFileName = \"/Users/lambdajohn/JXGitRepos/js-front-end/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { axiosWithAuth } from '../components/axiosWithAuth';\n\nconst Login = props => {\n  const [credentials, setCredentials] = useState({});\n\n  const login = e => {\n    e.preventDefault();\n    axiosWithAuth().post('login', credentials, {\n      headers: {\n        Authorization: `Basic ${btoa('lambda-client:lambda:secret')}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => {\n      localStorage.setItem('token', res.data.token);\n      props.history.push('/');\n    });\n  };\n\n  const handleChange = e => setCredentials({ ...credentials,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: credentials.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: credentials.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Log in\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/lambdajohn/JXGitRepos/js-front-end/src/components/Login.js"],"names":["React","useState","axiosWithAuth","Login","props","credentials","setCredentials","login","e","preventDefault","post","headers","Authorization","btoa","then","res","localStorage","setItem","data","token","history","push","handleChange","target","name","value","username","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AAEC,QAAMM,KAAK,GAAGC,CAAC,IAAI;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,aAAa,GAAGQ,IAAhB,CAAqB,OAArB,EAA8BL,WAA9B,EAA2C;AACzCM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQC,IAAI,CAAC,6BAAD,CAAgC,EADrD;AAEP,wBAAgB;AAFT;AADgC,KAA3C,EAMCC,IAND,CAMMC,GAAG,IAAI;AACXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAf,MAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KATD;AAUD,GAZD;;AAcA,QAAMC,YAAY,GAAGd,CAAC,IAAIF,cAAc,CAAC,EACvC,GAAGD,WADoC;AAEvC,KAACG,CAAC,CAACe,MAAF,CAASC,IAAV,GAAiBhB,CAAC,CAACe,MAAF,CAASE;AAFa,GAAD,CAAxC;;AAKE,sBACE;AAAM,IAAA,QAAQ,EAAElB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEF,WAAW,CAACqB,QAHrB;AAIE,IAAA,QAAQ,EAAEJ,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEjB,WAAW,CAACsB,QAHrB;AAIE,IAAA,QAAQ,EAAEL,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF;AAoBH,CA1CD;;AA4CA,eAAenB,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { axiosWithAuth } from '../components/axiosWithAuth';\n\nconst Login = (props) => {\n const [credentials, setCredentials] = useState({});\n\n  const login = e => {\n    e.preventDefault();\n    axiosWithAuth().post('login', credentials, {\n      headers: {\n        Authorization: `Basic ${btoa('lambda-client:lambda:secret')}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(res => {\n      localStorage.setItem('token', res.data.token);\n      props.history.push('/');\n    })\n  }\n\n  const handleChange = e => setCredentials({\n    ...credentials,\n    [e.target.name]: e.target.value\n    })\n\n    return (\n      <form onSubmit={login}>\n        <label>\n          Username: \n          <input\n            type=\"text\"\n            name=\"username\"\n            value={credentials.username}\n            onChange={handleChange}\n          />\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={credentials.password}\n          onChange={handleChange}\n        />\n        <button>Log in</button>\n      </form>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}